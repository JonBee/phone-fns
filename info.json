{"name":"phone-fns","version":"2.0.0","description":"Small and simple functional phone library","docs":[{"since":"v0.1.0","deprecated":false,"category":"Function","title":"breakdown","desc":"Takes a provided phone string and breaks it down into an object of codes","examples":["breakdown('', '111-222-3333');\r// => { countryCode: '', areaCode: '111', localCode: '222', lineNumber: '3333', extension: '' }\r\rbreakdown('1787', '5554441111');\r// => { countryCode: 1787, areaCode: '555', localCode: '444', lineNumber: '1111', extension: '' }\r\rbreakdown('', '555-444-3333 x 8989');\r// => { countryCode: '', areaCode: '555', localCode: '444', lineNumber: '3333', extension: 8989 }\r\r// Breakdown is curried\rconst breaker = breakdown('');\r\rbreaker('222-333-4444'); // => { areaCode: '222', localCode: '333', lineNumber: '4444' }"],"returns":[{"type":{"names":["Object"]},"description":"Returns an object of the broken down phone number"}],"params":[{"type":{"names":["String"]},"description":"The provided country code for the number","name":"countryCode"},{"type":{"names":["String"]},"description":"The phone number to breakdown","name":"phone"}],"syntax":"breakdown(, )","usage":{"commonjs":{"title":"CommonJs","code":"const breakdown = require('phone-fns/breakdown');"},"standard":{"title":"Standard","code":"import breakdown from 'phone-fns/breakdown';"},"cdn":{"title":"CDN","code":"<script src=\"https://cdn.jsdelivr.net/npm/phone-fns@2.0.0/breakdown.js\"></script>"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/phone-fns/breakdown.js\"></script>"}}},{"since":"v0.1.0","deprecated":"The use case for this method is too low to keep it, use breakdown instead","category":"Function","title":"find","desc":"Find a piece of the phone number and return it","examples":["find('areaCode', '555-444-1111'); // => '555'\rfind('localCode', '555-444-1111'); // => '444'\rfind('lineNumber', '555-444-1111'); // => '1111'\rfind('extension', '555-444-1111 8989'); // => '8989'\r\r// find is also curried\r\rconst finder = find('areaCode');\r\rfinder('555-444-1111'); // => '555'"],"returns":[{"type":{"names":["String"]},"description":"Returns a string from the desired part of the phone number"}],"params":[{"type":{"names":["String"]},"description":"The piece of the phone to look for","name":"type"},{"type":{"names":["String"]},"description":"The phone number to breakdown","name":"phone"}],"syntax":"find(, )","usage":{"commonjs":{"title":"CommonJs","code":"const find = require('phone-fns/find');"},"standard":{"title":"Standard","code":"import find from 'phone-fns/find';"},"cdn":{"title":"CDN","code":"<script src=\"https://cdn.jsdelivr.net/npm/phone-fns@2.0.0/find.js\"></script>"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/phone-fns/find.js\"></script>"}}},{"since":"v0.1.0","deprecated":false,"category":"Function","title":"format","desc":"Allows you to format phone numbers however you desire using N as number placeholders this placeholder is case insensitive","examples":["format('', '(NNN) NNN.NNNN', '444-555-6666'); // => '(444) 555.6666'\rformat('1', 'N + (NNN) NNN.NNNN', '444-555-6666'); // => '1 + (444) 555.6666'\rformat('', '(NNN) NNN.NNNN x NNNN', '444-555-66668989'); // => '(444) 555.6666 x 8989'\r\r// Format is case insensitive\rformat('', '(NNN) nnn-NNnn', '4445556666') // => (444) 555-6666\r\r// Format is also curried\rconst noCC = format('');\rconst withLayout = format('', 'NNN.NNN.NNNN');\r\rnoCC('NNN-NNN-NNNN', '4445556666'); // => '444-555-6666'\rwithLayout('4445556666'); // => '444.555.6666'"],"returns":[{"type":{"names":["String"]},"description":"Returns a string which is the formatted phone number"}],"params":[{"type":{"names":["String"]},"description":"The provided country code for the number or an empty string if none provided","name":"cc"},{"type":{"names":["String"]},"description":"The desired layout of the phone number","name":"layout"},{"type":{"names":["String"]},"description":"The phone number to breakdown","name":"phone"}],"syntax":"format(, , )","usage":{"commonjs":{"title":"CommonJs","code":"const format = require('phone-fns/format');"},"standard":{"title":"Standard","code":"import format from 'phone-fns/format';"},"cdn":{"title":"CDN","code":"<script src=\"https://cdn.jsdelivr.net/npm/phone-fns@2.0.0/format.js\"></script>"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/phone-fns/format.js\"></script>"}}},{"since":"v0.1.0","deprecated":false,"category":"Function","title":"isValid","desc":"Validates the base number, does not take the country code or extension into consideration for this validation","examples":["isValid('555-444-3333'); // => true"],"returns":[{"type":{"names":["Boolean"]},"description":"Returns a boolean if the number provided is valid or not"}],"params":[{"type":{"names":["String"]},"description":"The phone number to breakdown","name":"phone"}],"syntax":"isValid()","usage":{"commonjs":{"title":"CommonJs","code":"const isValid = require('phone-fns/isValid');"},"standard":{"title":"Standard","code":"import isValid from 'phone-fns/isValid';"},"cdn":{"title":"CDN","code":"<script src=\"https://cdn.jsdelivr.net/npm/phone-fns@2.0.0/isValid.js\"></script>"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/phone-fns/isValid.js\"></script>"}}},{"since":"v1.0.0","deprecated":false,"category":"Function","title":"match","desc":"Checks if the two provided numbers are matching or not","examples":["match('5554443333', '5554443333'); // => true\rmatch('5554443333', '555-444-3333'); // => true\rmatch('555-444-3333', '555-444-3333'); // => true\rmatch('555.444.3333', '555-444-3333'); // => true\r\r// Or use it as a curried function\r\rconst matcher = match('5554443333');\r\rmatcher('555-444-3333'); // => true\rmatcher('555.444.3333'); // => true\rmatcher('555.444.2222'); // => false"],"returns":[{"type":{"names":["Boolean"]},"description":"Returns a boolean if the numbers provided to match"}],"params":[{"type":{"names":["String"]},"description":"The number to validate against","name":"x"},{"type":{"names":["String"]},"description":"The number to validate","name":"y"}],"syntax":"match(, )","usage":{"commonjs":{"title":"CommonJs","code":"const match = require('phone-fns/match');"},"standard":{"title":"Standard","code":"import match from 'phone-fns/match';"},"cdn":{"title":"CDN","code":"<script src=\"https://cdn.jsdelivr.net/npm/phone-fns@2.0.0/match.js\"></script>"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/phone-fns/match.js\"></script>"}}},{"since":"v0.1.0","deprecated":false,"category":"Function","title":"uglify","desc":"Strips all of the special characters from the given string","examples":["const results = uglify('555-444-3333'); // => '5554443333'"],"returns":[{"type":{"names":["String"]},"description":"Returns the newly created phone number string"}],"params":[{"type":{"names":["String"]},"description":"The phone number to trim and strip down","name":"phone"}],"syntax":"uglify()","usage":{"commonjs":{"title":"CommonJs","code":"const uglify = require('phone-fns/uglify');"},"standard":{"title":"Standard","code":"import uglify from 'phone-fns/uglify';"},"cdn":{"title":"CDN","code":"<script src=\"https://cdn.jsdelivr.net/npm/phone-fns@2.0.0/uglify.js\"></script>"},"browser":{"title":"Browser","code":"<script src=\"path/to/node_modules/phone-fns/uglify.js\"></script>"}}}]}